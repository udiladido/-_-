{"ast":null,"code":"var _jsxFileName = \"/Users/leejaehee/Desktop/javaide/react-workspace/todo-react-app/src/App.js\";\nimport React from 'react';\nimport Todo from './Todo';\nimport AddTodo from './AddTodo';\nimport { Paper, List, Container, Typography, Grid } from \"@mui/material\";\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getLocation = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(this.fetchLocationDetails, this.handleLocationError);\n      } else {\n        alert(\"Geolocation is not supported by this browser.\");\n      }\n    };\n    this.fetchLocationDetails = position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      this.fetchAddress(latitude, longitude);\n      this.fetchWeather(latitude, longitude);\n    };\n    this.handleLocationError = error => {\n      console.error(\"Error Code = \" + error.code + \" - \" + error.message);\n    };\n    this.fetchAddress = async (latitude, longitude) => {\n      const apiKey = 'AIzaSyCRQ9NdK-XhglCFeeAmd7XQFr2Af958O1g'; // 여기에 Google Maps API 키를 입력하세요.\n      const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${apiKey}`;\n      try {\n        var _response$data$result;\n        const response = await axios.get(url);\n        const address = (_response$data$result = response.data.results[0]) === null || _response$data$result === void 0 ? void 0 : _response$data$result.formatted_address;\n        this.setState({\n          address\n        });\n      } catch (error) {\n        console.error(\"Error fetching address:\", error);\n      }\n    };\n    this.fetchWeather = async (latitude, longitude) => {\n      const apiKey = 'jh'; // 여기에 OpenWeatherMap API 키를 입력하세요.\n      const url = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&appid=${apiKey}`;\n      try {\n        const response = await axios.get(url);\n        const weather = `${response.data.weather[0].description} ${response.data.main.temp}°C`;\n        this.setState({\n          weather\n        });\n      } catch (error) {\n        console.error(\"Error fetching weather:\", error);\n      }\n    };\n    this.add = item => {\n      const newItem = {\n        ...item,\n        id: uuidv4(),\n        done: false\n      };\n      const newItems = [...this.state.items, newItem];\n      this.setState({\n        items: newItems\n      });\n      console.log(\"items:\", newItems);\n    };\n    this.delete = item => {\n      const newItems = this.state.items.filter(e => e.id !== item.id);\n      this.setState({\n        items: newItems\n      }, () => {\n        console.log(\"Updated Items:\", this.state.items);\n      });\n    };\n    this.state = {\n      items: [{\n        id: uuidv4(),\n        title: \"Todo 1\",\n        done: true\n      }, {\n        id: uuidv4(),\n        title: \"Todo 2\",\n        done: false\n      }],\n      currentTime: new Date(),\n      address: '',\n      weather: ''\n    };\n  }\n  componentDidMount() {\n    this.timeInterval = setInterval(() => {\n      this.setState({\n        currentTime: new Date()\n      });\n    }, 1000);\n    this.getLocation();\n  }\n  componentWillUnmount() {\n    clearInterval(this.timeInterval);\n  }\n  render() {\n    const {\n      items,\n      currentTime,\n      address,\n      weather\n    } = this.state;\n    const todoItems = items.length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        margin: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: items.map(item => /*#__PURE__*/_jsxDEV(Todo, {\n          item: item,\n          delete: this.delete\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"black-nav\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC624\\uB298\\uC758 \\uD560\\uC77C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          alignItems: \"center\",\n          spacing: 2,\n          style: {\n            margin: '16px 0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: currentTime.toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: address || 'Loading address...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              children: weather || 'Loading weather...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddTodo, {\n          add: this.add\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TodoList\",\n          children: todoItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Todo","AddTodo","Paper","List","Container","Typography","Grid","v4","uuidv4","axios","jsxDEV","_jsxDEV","App","Component","constructor","props","getLocation","navigator","geolocation","getCurrentPosition","fetchLocationDetails","handleLocationError","alert","position","latitude","longitude","coords","fetchAddress","fetchWeather","error","console","code","message","apiKey","url","_response$data$result","response","get","address","data","results","formatted_address","setState","weather","description","main","temp","add","item","newItem","id","done","newItems","state","items","log","delete","filter","e","title","currentTime","Date","componentDidMount","timeInterval","setInterval","componentWillUnmount","clearInterval","render","todoItems","length","style","margin","children","map","fileName","_jsxFileName","lineNumber","columnNumber","className","maxWidth","container","direction","alignItems","spacing","variant","toLocaleTimeString"],"sources":["/Users/leejaehee/Desktop/javaide/react-workspace/todo-react-app/src/App.js"],"sourcesContent":["import React from 'react';\nimport Todo from './Todo';\nimport AddTodo from './AddTodo';\nimport { Paper, List, Container, Typography, Grid } from \"@mui/material\";\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [\n        { id: uuidv4(), title: \"Todo 1\", done: true },\n        { id: uuidv4(), title: \"Todo 2\", done: false },\n      ],\n      currentTime: new Date(),\n      address: '',\n      weather: ''\n    };\n  }\n\n  componentDidMount() {\n    this.timeInterval = setInterval(() => {\n      this.setState({ currentTime: new Date() });\n    }, 1000);\n    this.getLocation();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timeInterval);\n  }\n\n  getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.fetchLocationDetails, this.handleLocationError);\n    } else {\n      alert(\"Geolocation is not supported by this browser.\");\n    }\n  }\n\n  fetchLocationDetails = (position) => {\n    const { latitude, longitude } = position.coords;\n    this.fetchAddress(latitude, longitude);\n    this.fetchWeather(latitude, longitude);\n  }\n\n  handleLocationError = (error) => {\n    console.error(\"Error Code = \" + error.code + \" - \" + error.message);\n  }\n\n  fetchAddress = async (latitude, longitude) => {\n    const apiKey ='AIzaSyCRQ9NdK-XhglCFeeAmd7XQFr2Af958O1g' ; // 여기에 Google Maps API 키를 입력하세요.\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${apiKey}`;\n    \n    try {\n      const response = await axios.get(url);\n      const address = response.data.results[0]?.formatted_address;\n      this.setState({ address });\n    } catch (error) {\n      console.error(\"Error fetching address:\", error);\n    }\n  }\n\n  fetchWeather = async (latitude, longitude) => {\n    const apiKey = 'jh'; // 여기에 OpenWeatherMap API 키를 입력하세요.\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&appid=${apiKey}`;\n    \n    try {\n      const response = await axios.get(url);\n      const weather = `${response.data.weather[0].description} ${response.data.main.temp}°C`;\n      this.setState({ weather });\n    } catch (error) {\n      console.error(\"Error fetching weather:\", error);\n    }\n  }\n\n  add = (item) => {\n    const newItem = { ...item, id: uuidv4(), done: false };\n    const newItems = [...this.state.items, newItem];\n    this.setState({ items: newItems });\n    console.log(\"items:\", newItems);\n  }\n\n  delete = (item) => {\n    const newItems = this.state.items.filter(e => e.id !== item.id);\n    this.setState({ items: newItems }, () => {\n      console.log(\"Updated Items:\", this.state.items);\n    });\n  }\n\n  render() {\n    const { items, currentTime, address, weather } = this.state;\n\n    const todoItems = items.length > 0 && (\n      <Paper style={{ margin: 16 }}>\n        <List>\n          {items.map((item) => (\n            <Todo item={item} key={item.id} delete={this.delete} />\n          ))}\n        </List>\n      </Paper>\n    );\n\n    return (\n      <div className='App'>\n        <div className=\"black-nav\">\n          <h4>오늘의 할일</h4>\n        </div>\n        <Container maxWidth=\"md\">\n          <Grid container direction=\"column\" alignItems=\"center\" spacing={2} style={{ margin: '16px 0' }}>\n            <Grid item>\n              <Typography variant=\"h6\">{currentTime.toLocaleTimeString()}</Typography>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"subtitle1\">{address || 'Loading address...'}</Typography>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"subtitle2\">{weather || 'Loading weather...'}</Typography>\n            </Grid>\n          </Grid>\n          <AddTodo add={this.add} />\n          <div className='TodoList'>{todoItems}</div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}